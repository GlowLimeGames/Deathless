Last login: Thu Feb  9 22:53:07 on ttys001
eduroam123-206:~ olivia$ git 
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
eduroam123-206:~ olivia$ cd Desktop/Deathless
eduroam123-206:Deathless olivia$ git clone https://github.com/GlowLimeGames/Deathless/tree/master
Cloning into 'master'...
remote: Not Found
fatal: repository 'https://github.com/GlowLimeGames/Deathless/tree/master/' not found
eduroam123-206:Deathless olivia$ git clone https://github.com/GlowLimeGames/Deathless/
Cloning into 'Deathless'...
remote: Counting objects: 94, done.
remote: Compressing objects: 100% (88/88), done.
remote: Total 94 (delta 40), reused 0 (delta 0), pack-reused 4
Unpacking objects: 100% (94/94), done.
eduroam123-206:Deathless olivia$ cd Deathless
eduroam123-206:Deathless olivia$ git pull
Already up-to-date.
eduroam123-206:Deathless olivia$ git checkout
Your branch is up-to-date with 'origin/master'.
eduroam123-206:Deathless olivia$ git checkout -b oliviabranch
Switched to a new branch 'oliviabranch'
eduroam123-206:Deathless olivia$ git merge master
Already up-to-date.
eduroam123-206:Deathless olivia$ git status
On branch oliviabranch
Untracked files:
  (use "git add <file>..." to include in what will be committed)

	jjjjj

nothing added to commit but untracked files present (use "git add" to track)
eduroam123-206:Deathless olivia$ git add *
eduroam123-206:Deathless olivia$ git status
On branch oliviabranch
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   jjjjj

eduroam123-206:Deathless olivia$ git commit "just a practice"
error: pathspec 'just a practice' did not match any file(s) known to git.
eduroam123-206:Deathless olivia$ git commit
[oliviabranch 694eb80] sssss
 Committer: Olivia <olivia@eduroam123-206.hampshire.edu>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
 create mode 100644 jjjjj
eduroam123-206:Deathless olivia$ git push 
fatal: The current branch oliviabranch has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin oliviabranch

eduroam123-206:Deathless olivia$ git push --set-upstream origin oliviabranch
Username for 'https://github.com': olivecby
Password for 'https://olivecby@github.com': 
remote: You must verify your email address.
remote: See https://github.com/settings/emails.
fatal: unable to access 'https://github.com/GlowLimeGames/Deathless/': The requested URL returned error: 403
eduroam123-206:Deathless olivia$ 
